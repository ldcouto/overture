["type invariant satisfiable obligation:(exists e:Edition \u0026 (e in set ({1, ... ,50} union {\u003cnil\u003e})))","type invariant satisfiable obligation:(exists e:Month \u0026 (e in set ({1, ... ,12} union {\u003cnil\u003e})))","type invariant satisfiable obligation:(exists e:Year \u0026 (e in set ({1800, ... ,1998} union {\u003cnil\u003e})))","function establishes postcondition obligation:(forall rt:Recordtype \u0026 post_field(rt, (required(rt) union optional(rt))))","function establishes postcondition obligation:(forall dB:set of (Record), i:Id \u0026 (pre_get(dB, i) \u003d\u003e post_get(dB, i, let record in set dB in (if ((record.id) \u003d i)\nthen record\nelse get((dB \\ {record}), i)))))","let be st existence obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e (exists record in set dB \u0026 true)))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e (forall record in set dB \u0026 ((not ((record.id) \u003d i)) \u003d\u003e pre_get((dB \\ {record}), i)))))","recursive function obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e (forall record in set dB \u0026 ((not ((record.id) \u003d i)) \u003d\u003e (CardDb(dB, i) \u003e CardDb((dB \\ {record}), i))))))","function establishes postcondition obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (pre_getvalue(valuetype, dB, i) \u003d\u003e post_getvalue(valuetype, dB, i, (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((valuetype \u003d \u003ctitle\u003e) \u003d\u003e pre_get(dB, i))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((not ((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title)))) \u003d\u003e ((valuetype \u003d \u003cauthor\u003e) \u003d\u003e pre_get(dB, i)))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((not ((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title)))) \u003d\u003e ((not ((valuetype \u003d \u003cauthor\u003e) and (RESULT \u003d (get(dB, i).author)))) \u003d\u003e ((valuetype \u003d \u003cjournal\u003e) \u003d\u003e pre_get(dB, i))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((not ((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title)))) \u003d\u003e ((not ((valuetype \u003d \u003cauthor\u003e) and (RESULT \u003d (get(dB, i).author)))) \u003d\u003e ((not ((valuetype \u003d \u003cjournal\u003e) and (RESULT \u003d (get(dB, i).journal)))) \u003d\u003e ((valuetype \u003d \u003cyear\u003e) \u003d\u003e pre_get(dB, i)))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((not ((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title)))) \u003d\u003e ((not ((valuetype \u003d \u003cauthor\u003e) and (RESULT \u003d (get(dB, i).author)))) \u003d\u003e ((not ((valuetype \u003d \u003cjournal\u003e) and (RESULT \u003d (get(dB, i).journal)))) \u003d\u003e ((not ((valuetype \u003d \u003cyear\u003e) and (RESULT \u003d (get(dB, i).year)))) \u003d\u003e ((valuetype \u003d \u003cbooktitle\u003e) \u003d\u003e pre_get(dB, i))))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((not ((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title)))) \u003d\u003e ((not ((valuetype \u003d \u003cauthor\u003e) and (RESULT \u003d (get(dB, i).author)))) \u003d\u003e ((not ((valuetype \u003d \u003cjournal\u003e) and (RESULT \u003d (get(dB, i).journal)))) \u003d\u003e ((not ((valuetype \u003d \u003cyear\u003e) and (RESULT \u003d (get(dB, i).year)))) \u003d\u003e ((not ((valuetype \u003d \u003cbooktitle\u003e) and (RESULT \u003d (get(dB, i).booktitle)))) \u003d\u003e ((valuetype \u003d \u003cinstitution\u003e) \u003d\u003e pre_get(dB, i)))))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e let RESULT \u003d (cases valuetype :\n\u003ctitle\u003e -\u003e (get(dB, i).title),\n\u003cauthor\u003e -\u003e (get(dB, i).author),\n\u003cjournal\u003e -\u003e (get(dB, i).journal),\n\u003cyear\u003e -\u003e (get(dB, i).year),\n\u003cbooktitle\u003e -\u003e (get(dB, i).booktitle),\n\u003cinstitution\u003e -\u003e (get(dB, i).institution),\n\u003cpublisher\u003e -\u003e (get(dB, i).publisher)\n end) in ((not ((valuetype \u003d \u003ctitle\u003e) and (RESULT \u003d (get(dB, i).title)))) \u003d\u003e ((not ((valuetype \u003d \u003cauthor\u003e) and (RESULT \u003d (get(dB, i).author)))) \u003d\u003e ((not ((valuetype \u003d \u003cjournal\u003e) and (RESULT \u003d (get(dB, i).journal)))) \u003d\u003e ((not ((valuetype \u003d \u003cyear\u003e) and (RESULT \u003d (get(dB, i).year)))) \u003d\u003e ((not ((valuetype \u003d \u003cbooktitle\u003e) and (RESULT \u003d (get(dB, i).booktitle)))) \u003d\u003e ((not ((valuetype \u003d \u003cinstitution\u003e) and (RESULT \u003d (get(dB, i).institution)))) \u003d\u003e ((valuetype \u003d \u003cpublisher\u003e) \u003d\u003e pre_get(dB, i))))))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((\u003ctitle\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((not (\u003ctitle\u003e \u003d valuetype)) \u003d\u003e ((\u003cauthor\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i)))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((not (\u003ctitle\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cauthor\u003e \u003d valuetype)) \u003d\u003e ((\u003cjournal\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((not (\u003ctitle\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cauthor\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cjournal\u003e \u003d valuetype)) \u003d\u003e ((\u003cyear\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i)))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((not (\u003ctitle\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cauthor\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cjournal\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cyear\u003e \u003d valuetype)) \u003d\u003e ((\u003cbooktitle\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i))))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((not (\u003ctitle\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cauthor\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cjournal\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cyear\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cbooktitle\u003e \u003d valuetype)) \u003d\u003e ((\u003cinstitution\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i)))))))))","legal function application obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e ((not (\u003ctitle\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cauthor\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cjournal\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cyear\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cbooktitle\u003e \u003d valuetype)) \u003d\u003e ((not (\u003cinstitution\u003e \u003d valuetype)) \u003d\u003e ((\u003cpublisher\u003e \u003d valuetype) \u003d\u003e pre_get(dB, i))))))))))","cases exhaustive obligation:(forall valuetype:Valuetype, dB:set of (Record), i:Id \u0026 (((i in set usedIds(dB)) and (valuetype in set {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e, \u003cbooktitle\u003e, \u003cinstitution\u003e, \u003cpublisher\u003e})) \u003d\u003e (((((((valuetype \u003d \u003ctitle\u003e) or (valuetype \u003d \u003cauthor\u003e)) or (valuetype \u003d \u003cjournal\u003e)) or (valuetype \u003d \u003cyear\u003e)) or (valuetype \u003d \u003cbooktitle\u003e)) or (valuetype \u003d \u003cinstitution\u003e)) or (valuetype \u003d \u003cpublisher\u003e))))","function establishes postcondition obligation:(forall dB:set of (Record), i:Id \u0026 (pre_iscomplete(dB, i) \u003d\u003e post_iscomplete(dB, i, (required(recordtype(dB, i)) \u003d {f | f in set required(recordtype(dB, i)) \u0026 (not isempty(getvalue(f, dB, i)))}))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (required(recordtype(dB, i)) \u003d {f | f in set required(recordtype(dB, i)) \u0026 (not isempty(getvalue(f, dB, i)))}) in pre_recordtype(dB, i)))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (required(recordtype(dB, i)) \u003d {f | f in set required(recordtype(dB, i)) \u0026 (not isempty(getvalue(f, dB, i)))}) in (forall x in set required(recordtype(dB, i)) \u0026 pre_getvalue(x, dB, i))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_recordtype(dB, i)))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_recordtype(dB, i)))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e (forall f in set required(recordtype(dB, i)) \u0026 pre_getvalue(f, dB, i))))","function establishes postcondition obligation:(forall value:Value \u0026 post_isempty(value, (if (value \u003d \u003cnil\u003e)\nthen true\nelse false)))","function establishes postcondition obligation:(forall dB:set of (Record) \u0026 post_isidentical(dB, (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1}))))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e pre_iscomplete(dB, i))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e (iscomplete(dB, i) \u003d\u003e pre_iscomplete(dB, j)))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e (iscomplete(dB, i) \u003d\u003e (iscomplete(dB, j) \u003d\u003e pre_recordtype(dB, i))))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e (iscomplete(dB, i) \u003d\u003e (iscomplete(dB, j) \u003d\u003e pre_recordtype(dB, j))))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e (iscomplete(dB, i) \u003d\u003e (iscomplete(dB, j) \u003d\u003e ((recordtype(dB, i) \u003d recordtype(dB, j)) \u003d\u003e pre_recordtype(dB, i)))))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e (iscomplete(dB, i) \u003d\u003e (iscomplete(dB, j) \u003d\u003e ((recordtype(dB, i) \u003d recordtype(dB, j)) \u003d\u003e (forall x in set required(recordtype(dB, i)) \u0026 pre_getvalue(x, dB, i))))))))","legal function application obligation:(forall dB:set of (Record) \u0026 let RESULT \u003d (if (dB \u003d {})\nthen false\nelse let record1 in set dB in (if iscomplete(dB, (record1.id))\nthen isidentical2(dB, (dB \\ {record1}), dB, record1)\nelse isidentical((dB \\ {record1})))) in (forall i, j in set usedIds(dB) \u0026 ((i \u003c\u003e j) \u003d\u003e (iscomplete(dB, i) \u003d\u003e (iscomplete(dB, j) \u003d\u003e ((recordtype(dB, i) \u003d recordtype(dB, j)) \u003d\u003e (forall x in set required(recordtype(dB, i)) \u0026 pre_getvalue(x, dB, j))))))))","let be st existence obligation:(forall dB:set of (Record) \u0026 ((not (dB \u003d {})) \u003d\u003e (exists record1 in set dB \u0026 true)))","legal function application obligation:(forall dB:set of (Record) \u0026 ((not (dB \u003d {})) \u003d\u003e (forall record1 in set dB \u0026 pre_iscomplete(dB, (record1.id)))))","let be st existence obligation:(forall dB1:set of (Record), dB2:set of (Record), olddB:set of (Record), record1:Record \u0026 ((not (dB2 \u003d {})) \u003d\u003e (exists record2 in set dB2 \u0026 true)))","legal function application obligation:(forall dB1:set of (Record), dB2:set of (Record), olddB:set of (Record), record1:Record \u0026 ((not (dB2 \u003d {})) \u003d\u003e (forall record2 in set dB2 \u0026 pre_iscomplete(olddB, (record2.id)))))","legal function application obligation:(forall dB1:set of (Record), dB2:set of (Record), olddB:set of (Record), record1:Record \u0026 ((not (dB2 \u003d {})) \u003d\u003e (forall record2 in set dB2 \u0026 (iscomplete(olddB, (record2.id)) \u003d\u003e pre_recordtype(olddB, (record1.id))))))","let be st existence obligation:(forall dB1:set of (Record), dB2:set of (Record), olddB:set of (Record), record1:Record, record2:Record, requiredfields:set of (Valuetype) \u0026 ((not (requiredfields \u003d {})) \u003d\u003e (exists field in set requiredfields \u0026 true)))","legal function application obligation:(forall dB1:set of (Record), dB2:set of (Record), olddB:set of (Record), record1:Record, record2:Record, requiredfields:set of (Valuetype) \u0026 ((not (requiredfields \u003d {})) \u003d\u003e (forall field in set requiredfields \u0026 pre_getvalue(field, olddB, (record1.id)))))","legal function application obligation:(forall dB1:set of (Record), dB2:set of (Record), olddB:set of (Record), record1:Record, record2:Record, requiredfields:set of (Valuetype) \u0026 ((not (requiredfields \u003d {})) \u003d\u003e (forall field in set requiredfields \u0026 pre_getvalue(field, olddB, (record2.id)))))","non-empty sequence obligation:(forall v:Value \u0026 ((not is_(v, real)) \u003d\u003e ((not (v \u003d [])) \u003d\u003e (is_((hd v), char) \u003d\u003e (v \u003c\u003e [])))))","function establishes postcondition obligation:(forall string1:String, string2:String \u0026 post_issubstring(string1, string2, (if (string1 \u003d [])\nthen true\nelseif ((string2 \u003d []) or ((string1 \u003d \u003cnil\u003e) or (string2 \u003d \u003cnil\u003e)))\nthen false\nelseif ((hd string1) \u003d (hd string2))\nthen issubstring2((tl string1), (tl string2), string1)\nelse issubstring(string1, (tl string2)))))","legal function application obligation:(forall string1:String, string2:String \u0026 let RESULT \u003d (if (string1 \u003d [])\nthen true\nelseif ((string2 \u003d []) or ((string1 \u003d \u003cnil\u003e) or (string2 \u003d \u003cnil\u003e)))\nthen false\nelseif ((hd string1) \u003d (hd string2))\nthen issubstring2((tl string1), (tl string2), string1)\nelse issubstring(string1, (tl string2))) in ((not (string2 \u003d \u003cnil\u003e)) \u003d\u003e (forall i, j in set (inds string2) \u0026 pre_substring(string2, i, j))))","non-empty sequence obligation:(forall string1:String, string2:String \u0026 ((not (string1 \u003d [])) \u003d\u003e ((not ((string2 \u003d []) or ((string1 \u003d \u003cnil\u003e) or (string2 \u003d \u003cnil\u003e)))) \u003d\u003e (((hd string1) \u003d (hd string2)) \u003d\u003e (string1 \u003c\u003e [])))))","non-empty sequence obligation:(forall string1:String, string2:String \u0026 ((not (string1 \u003d [])) \u003d\u003e ((not ((string2 \u003d []) or ((string1 \u003d \u003cnil\u003e) or (string2 \u003d \u003cnil\u003e)))) \u003d\u003e (((hd string1) \u003d (hd string2)) \u003d\u003e (string2 \u003c\u003e [])))))","non-empty sequence obligation:(forall string1:String, string2:String \u0026 ((not (string1 \u003d [])) \u003d\u003e ((not ((string2 \u003d []) or ((string1 \u003d \u003cnil\u003e) or (string2 \u003d \u003cnil\u003e)))) \u003d\u003e ((not ((hd string1) \u003d (hd string2))) \u003d\u003e (string2 \u003c\u003e [])))))","non-empty sequence obligation:(forall string1:String, string2:String, oldstring1:String \u0026 ((not (string1 \u003d [])) \u003d\u003e ((not (string2 \u003d [])) \u003d\u003e (((hd string1) \u003d (hd string2)) \u003d\u003e (string1 \u003c\u003e [])))))","non-empty sequence obligation:(forall string1:String, string2:String, oldstring1:String \u0026 ((not (string1 \u003d [])) \u003d\u003e ((not (string2 \u003d [])) \u003d\u003e (((hd string1) \u003d (hd string2)) \u003d\u003e (string2 \u003c\u003e [])))))","function establishes postcondition obligation:(forall v:Value, f:Valuetype \u0026 post_isvalueoffield(v, f, (cases f :\n\u003caddress\u003e -\u003e isstring(v),\n\u003cauthor\u003e -\u003e isstring(v),\n\u003cbooktitle\u003e -\u003e isstring(v),\n\u003cedition\u003e -\u003e isedition(v),\n\u003ceditor\u003e -\u003e isstring(v),\n\u003cinstitution\u003e -\u003e isstring(v),\n\u003cjournal\u003e -\u003e isstring(v),\n\u003cmonth\u003e -\u003e ismonth(v),\n\u003cnote\u003e -\u003e isstring(v),\n\u003cnumber\u003e -\u003e isnumber(v),\n\u003corganization\u003e -\u003e isstring(v),\n\u003cpages\u003e -\u003e ispages(v),\n\u003cpublisher\u003e -\u003e isstring(v),\n\u003ctitle\u003e -\u003e isstring(v),\n\u003ctype\u003e -\u003e isstring(v),\n\u003cvolume\u003e -\u003e isvolume(v),\n\u003cyear\u003e -\u003e isyear(v)\n end)))","cases exhaustive obligation:(forall v:Value, f:Valuetype \u0026 (((((((((((((((((f \u003d \u003caddress\u003e) or (f \u003d \u003cauthor\u003e)) or (f \u003d \u003cbooktitle\u003e)) or (f \u003d \u003cedition\u003e)) or (f \u003d \u003ceditor\u003e)) or (f \u003d \u003cinstitution\u003e)) or (f \u003d \u003cjournal\u003e)) or (f \u003d \u003cmonth\u003e)) or (f \u003d \u003cnote\u003e)) or (f \u003d \u003cnumber\u003e)) or (f \u003d \u003corganization\u003e)) or (f \u003d \u003cpages\u003e)) or (f \u003d \u003cpublisher\u003e)) or (f \u003d \u003ctitle\u003e)) or (f \u003d \u003ctype\u003e)) or (f \u003d \u003cvolume\u003e)) or (f \u003d \u003cyear\u003e)))","function establishes postcondition obligation:(forall rt:Recordtype \u0026 post_optional(rt, (cases rt :\n\u003carticle\u003e -\u003e {\u003cvolume\u003e, \u003cnumber\u003e, \u003cmonth\u003e, \u003cnote\u003e},\n\u003cbook\u003e -\u003e {\u003cvolume\u003e, \u003cseries\u003e, \u003caddress\u003e, \u003cedition\u003e, \u003cmonth\u003e, \u003cnote\u003e, \u003cpublisher\u003e},\n\u003cinproceeding\u003e -\u003e {\u003ceditor\u003e, \u003cpages\u003e, \u003corganization\u003e, \u003cpublisher\u003e, \u003caddress\u003e, \u003cpages\u003e, \u003corganization\u003e},\n\u003cmanual\u003e -\u003e {\u003cedition\u003e, \u003cnote\u003e, \u003corganization\u003e, \u003cmonth\u003e, \u003caddress\u003e, \u003cauthor\u003e, \u003corganization\u003e, \u003cyear\u003e},\n\u003ctechreport\u003e -\u003e {\u003cnumber\u003e, \u003cnote\u003e, \u003ctype\u003e, \u003cmonth\u003e, \u003caddress\u003e}\n end)))","cases exhaustive obligation:(forall rt:Recordtype \u0026 (((((rt \u003d \u003carticle\u003e) or (rt \u003d \u003cbook\u003e)) or (rt \u003d \u003cinproceeding\u003e)) or (rt \u003d \u003cmanual\u003e)) or (rt \u003d \u003ctechreport\u003e)))","function establishes postcondition obligation:(forall dB:set of (Record), i:Id \u0026 (pre_recordtype(dB, i) \u003d\u003e post_recordtype(dB, i, (if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e) in pre_get(dB, i)))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e) in ((not (is_(get(dB, i), Article) and (RESULT \u003d \u003carticle\u003e))) \u003d\u003e pre_get(dB, i))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e) in ((not (is_(get(dB, i), Article) and (RESULT \u003d \u003carticle\u003e))) \u003d\u003e ((not (is_(get(dB, i), Book) and (RESULT \u003d \u003cbook\u003e))) \u003d\u003e pre_get(dB, i)))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e) in ((not (is_(get(dB, i), Article) and (RESULT \u003d \u003carticle\u003e))) \u003d\u003e ((not (is_(get(dB, i), Book) and (RESULT \u003d \u003cbook\u003e))) \u003d\u003e ((not (is_(get(dB, i), Inproceeding) and (RESULT \u003d \u003cinproceeding\u003e))) \u003d\u003e pre_get(dB, i))))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e let RESULT \u003d (if is_(get(dB, i), Article)\nthen \u003carticle\u003e\nelseif is_(get(dB, i), Book)\nthen \u003cbook\u003e\nelseif is_(get(dB, i), Inproceeding)\nthen \u003cinproceeding\u003e\nelseif is_(get(dB, i), Manual)\nthen \u003cmanual\u003e\nelse \u003ctechreport\u003e) in ((not (is_(get(dB, i), Article) and (RESULT \u003d \u003carticle\u003e))) \u003d\u003e ((not (is_(get(dB, i), Book) and (RESULT \u003d \u003cbook\u003e))) \u003d\u003e ((not (is_(get(dB, i), Inproceeding) and (RESULT \u003d \u003cinproceeding\u003e))) \u003d\u003e ((not (is_(get(dB, i), Manual) and (RESULT \u003d \u003cmanual\u003e))) \u003d\u003e pre_get(dB, i)))))))","legal function application obligation:(forall dB:set of (Record), i:Id \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_get(dB, i)))","function establishes postcondition obligation:(forall rt:Recordtype \u0026 post_required(rt, (cases rt :\n\u003carticle\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cjournal\u003e, \u003cyear\u003e},\n\u003cbook\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cpublisher\u003e, \u003cyear\u003e},\n\u003cinproceeding\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cbooktitle\u003e, \u003cyear\u003e},\n\u003cmanual\u003e -\u003e {\u003ctitle\u003e},\n\u003ctechreport\u003e -\u003e {\u003ctitle\u003e, \u003cauthor\u003e, \u003cinstitution\u003e, \u003cyear\u003e}\n end)))","cases exhaustive obligation:(forall rt:Recordtype \u0026 (((((rt \u003d \u003carticle\u003e) or (rt \u003d \u003cbook\u003e)) or (rt \u003d \u003cinproceeding\u003e)) or (rt \u003d \u003cmanual\u003e)) or (rt \u003d \u003ctechreport\u003e)))","function postcondition satisfiable obligation:(forall s:String, i:nat1, j:nat1 \u0026 (pre_substring(s, i, j) \u003d\u003e (exists r:String \u0026 post_substring(s, i, j, r))))","function establishes postcondition obligation:(forall dB:set of (Record) \u0026 post_usedIds(dB, idset(dB, {})))","let be st existence obligation:(forall dB:set of (Record), ids:set of (Id) \u0026 ((not (dB \u003d {})) \u003d\u003e (exists record in set dB \u0026 true)))","recursive function obligation:(forall dB:set of (Record), ids:set of (Id) \u0026 ((not (dB \u003d {})) \u003d\u003e (forall record in set dB \u0026 (CardRecords(dB, ids) \u003e CardRecords((dB \\ {record}), (ids union {(record.id)}))))))","while loop termination obligation:...","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Month(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Year(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Edition(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Month(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Year(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Month(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Year(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Edition(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Month(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Year(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Month(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 inv_Year(\u003cnil\u003e))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((RESULT not in set usedIds(dB~)) \u003d\u003e ((e \u003d \u003carticle\u003e) \u003d\u003e inv_Month(\u003cnil\u003e))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((RESULT not in set usedIds(dB~)) \u003d\u003e ((e \u003d \u003carticle\u003e) \u003d\u003e inv_Year(\u003cnil\u003e))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((e \u003d \u003cbook\u003e) \u003d\u003e inv_Edition(\u003cnil\u003e))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((e \u003d \u003cbook\u003e) \u003d\u003e inv_Month(\u003cnil\u003e))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((e \u003d \u003cbook\u003e) \u003d\u003e inv_Year(\u003cnil\u003e))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003cinproceeding\u003e) \u003d\u003e inv_Month(\u003cnil\u003e)))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003cinproceeding\u003e) \u003d\u003e inv_Year(\u003cnil\u003e)))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cinproceeding\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003cmanual\u003e) \u003d\u003e inv_Edition(\u003cnil\u003e))))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cinproceeding\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003cmanual\u003e) \u003d\u003e inv_Month(\u003cnil\u003e))))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cinproceeding\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003cmanual\u003e) \u003d\u003e inv_Year(\u003cnil\u003e))))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cinproceeding\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cmanual\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Manual(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003ctechreport\u003e) \u003d\u003e inv_Month(\u003cnil\u003e)))))))","type compatibility obligation:(forall e:Recordtype, oldstate:mgd \u0026 ((not ((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))) \u003d\u003e ((not ((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cinproceeding\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((not ((e \u003d \u003cmanual\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Manual(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) \u003d\u003e ((e \u003d \u003ctechreport\u003e) \u003d\u003e inv_Year(\u003cnil\u003e)))))))","operation establishes postcondition obligation:(forall e:Recordtype, oldstate:mgd \u0026 (((RESULT not in set usedIds(dB~)) and ((e \u003d \u003carticle\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Article(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)})))) or (((e \u003d \u003cbook\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Book(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))) or (((e \u003d \u003cinproceeding\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Inproceeding(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))) or (((e \u003d \u003cmanual\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Manual(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))) or ((e \u003d \u003ctechreport\u003e) and ((((((dB union {mk_Article(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Book(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Inproceeding(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Manual(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) union {mk_Techreport(i, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}) \u003d (dB~ union {mk_Techreport(RESULT, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e, \u003cnil\u003e)}))))))))","legal function application obligation:((i in set usedIds(dB)) \u003d\u003e pre_recordtype(dB, i))","legal function application obligation:((i in set usedIds(dB)) \u003d\u003e ((f in set field(recordtype(dB, i))) \u003d\u003e (isvalueoffield(v, f) \u003d\u003e pre_iscomplete(dB, i))))","legal function application obligation:(((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB)))))) \u003d\u003e pre_getvalue(f, dB, i))","legal function application obligation:(((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB)))))) \u003d\u003e ((getvalue(f, dB, i) \u003d v) \u003d\u003e pre_get(dB, i)))","legal function application obligation:(((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB)))))) \u003d\u003e ((getvalue(f, dB, i) \u003d v) \u003d\u003e pre_get(dB~, i)))","legal function application obligation:(((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB)))))) \u003d\u003e ((getvalue(f, dB, i) \u003d v) \u003d\u003e (((dB \\ {get(dB, i)}) \u003d (dB~ \\ {get(dB~, i)})) \u003d\u003e pre_recordtype(dB, i))))","legal function application obligation:(((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB)))))) \u003d\u003e ((getvalue(f, dB, i) \u003d v) \u003d\u003e (((dB \\ {get(dB, i)}) \u003d (dB~ \\ {get(dB~, i)})) \u003d\u003e (forall x in set (field(recordtype(dB, i)) \\ {f}) \u0026 pre_getvalue(x, dB, i)))))","legal function application obligation:(((i in set usedIds(dB)) and ((f in set field(recordtype(dB, i))) and (isvalueoffield(v, f) and (not (iscomplete(dB, i) and isidentical(dB)))))) \u003d\u003e ((getvalue(f, dB, i) \u003d v) \u003d\u003e (((dB \\ {get(dB, i)}) \u003d (dB~ \\ {get(dB~, i)})) \u003d\u003e (forall x in set (field(recordtype(dB, i)) \\ {f}) \u0026 pre_getvalue(x, dB~, i)))))","legal function application obligation:((i in set usedIds(dB)) \u003d\u003e pre_recordtype(dB, i))","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(inv_Edition(v) and (is_(v, \u003cnil\u003e) or is_(v, nat)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(inv_Month(v) and (is_(v, \u003cnil\u003e) or is_(v, nat)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, nat1))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, nat1))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, seq of (char)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(is_(v, \u003cnil\u003e) or is_(v, nat1))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_get(dB, i)","type compatibility obligation:(inv_Year(v) and (is_(v, \u003cnil\u003e) or is_(v, nat)))","legal function application obligation:pre_get(dB, i)","legal function application obligation:pre_iscomplete(dB, i)","operation call obligation:(i in set usedIds(dB))","legal function application obligation:(forall i:Id, oldstate:mgd \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_iscomplete(dB, i)))","legal function application obligation:(forall i:Id, oldstate:mgd \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_iscomplete(dB, i)))","operation establishes postcondition obligation:(forall i:Id, oldstate:mgd \u0026 ((i in set usedIds(dB)) \u003d\u003e (iscomplete(dB, i) \u003c\u003d\u003e RESULT)))","legal function application obligation:((i in set usedIds(dB)) \u003d\u003e pre_get(dB~, i))","legal function application obligation:pre_get(dB, i)","legal function application obligation:(forall a:String, oldstate:mgd \u0026 (forall i in set RESULT \u0026 pre_get(dB, i)))","legal function application obligation:(forall a:String, oldstate:mgd \u0026 (forall i in set RESULT \u0026 (issubstring(a, (get(dB, i).author)) \u003d\u003e (forall record in set dB \u0026 (((record.id) not in set RESULT) \u003d\u003e pre_get(dB, i))))))","operation establishes postcondition obligation:(forall a:String, oldstate:mgd \u0026 (forall i in set RESULT \u0026 (issubstring(a, (get(dB, i).author)) and (not (exists record in set dB \u0026 (((record.id) not in set RESULT) and issubstring(a, (get(dB, i).author))))))))","legal function application obligation:(forall i:Id, oldstate:mgd \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_get(dB, i)))","legal function application obligation:(forall i:Id, oldstate:mgd \u0026 ((i in set usedIds(dB)) \u003d\u003e pre_get(dB, i)))","operation establishes postcondition obligation:(forall i:Id, oldstate:mgd \u0026 ((i in set usedIds(dB)) \u003d\u003e (RESULT \u003d get(dB, i))))"]