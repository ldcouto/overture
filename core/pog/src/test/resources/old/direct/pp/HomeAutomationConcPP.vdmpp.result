["legal function application obligation:(forall fname:seq of (char) \u0026 pre_(((io.freadval))[(nat * seq of (inline))]fname))","non-empty sequence obligation:(inlines \u003c\u003e [])","non-empty sequence obligation:(true \u003d\u003e (true \u003d\u003e (inlines \u003c\u003e [])))","operation establishes postcondition obligation:(forall id:nat, type:nodeType \u0026 ((id not in set (dom NodeList)) \u003d\u003e (forall finished1:bool, print2:bool, TargetTemp3:nat, Temp4:nat, TargetHumid5:nat, Humid6:nat, NodeList7:map (nat) to (nodeType), Algo8:algType \u0026 (true \u003d\u003e ((card (dom NodeList7)) \u003d ((card (dom NodeList)) + 1))))))","legal map application obligation:(forall id:nat, type:nodeType \u0026 ((id in set (dom NodeList)) \u003d\u003e (id in set (dom NodeList))))","operation establishes postcondition obligation:(forall id:nat, type:nodeType \u0026 ((id in set (dom NodeList)) \u003d\u003e ((card (dom ({id} \u003c-: NodeList))) \u003d ((card (dom NodeList)) - 1))))","operation call obligation:(forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))","type compatibility obligation:((envTemp - 1) \u003e\u003d 0)","type compatibility obligation:((envHumid - 1) \u003e\u003d 0)","while loop termination obligation:...","legal map application obligation:(forall th in set (dom wakeUpMap) \u0026 (th in set (dom wakeUpMap)))","legal map application obligation:(forall th in set (dom wakeUpMap) \u0026 ((wakeUpMap(th) \u003c\u003e nil) \u003d\u003e (th in set (dom wakeUpMap))))","operation establishes postcondition obligation:(forall x in set (rng wakeUpMap) \u0026 ((x \u003d nil) or (x \u003e\u003d currentTime)))"]