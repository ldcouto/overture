["type compatibility obligation:inv_PPM(60)","type compatibility obligation:inv_PPM(120)","non-zero obligation:(((60 / 60) / 1000) \u003c\u003e 0)","type compatibility obligation:is_((1 / ((LRL / 60) / 1000)), nat)","state invariant holds obligation:((MED \u003c 8) and ((10 in set {10, ... ,50}) and ((2 in set {2, ... ,16}) and (8 \u003c\u003d 16))))","state invariant holds obligation:(forall sensed1:[ActivityData], interval2:Time, finished3:bool, LRL4:PPM, MSR5:PPM, threshold6:nat1, reactionT7:Time, recoveryT8:Time, responseF9:nat1 \u0026 (((threshold6 \u003c 8) and ((reactionT7 in set {10, ... ,50}) and ((recoveryT8 in set {2, ... ,16}) and (responseF9 \u003c\u003d 16)))) \u003d\u003e (forall sensed10:[ActivityData], interval11:Time, finished12:bool, LRL13:PPM, MSR14:PPM, threshold15:nat1, reactionT16:Time, recoveryT17:Time, responseF18:nat1 \u0026 (((threshold15 \u003c 8) and ((reactionT16 in set {10, ... ,50}) and ((recoveryT17 in set {2, ... ,16}) and (responseF18 \u003c\u003d 16)))) \u003d\u003e (((threshold15 \u003c 8) and ((reactionT16 in set {10, ... ,50}) and ((recoveryT17 in set {2, ... ,16}) and (responseF18 \u003c\u003d 16)))) \u003d\u003e ((threshold15 \u003c 8) and ((reactionT16 in set {10, ... ,50}) and ((recoveryT17 in set {2, ... ,16}) and (responseF18 \u003c\u003d 16)))))))))","state invariant holds obligation:(forall ad:ActivityData \u0026 (((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16))))))","type compatibility obligation:(forall ad:ActivityData \u0026 is_(ad, [ActivityData]))","state invariant holds obligation:(((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))))","non-zero obligation:(((MSR / 60) / 1000) \u003c\u003e 0)","type compatibility obligation:is_((1 / ((MSR / 60) / 1000)), nat)","state invariant holds obligation:(((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))))","non-zero obligation:(((LRL / 60) / 1000) \u003c\u003e 0)","type compatibility obligation:is_((1 / ((LRL / 60) / 1000)), nat)","type compatibility obligation:inv_ActivityData(1)","type compatibility obligation:inv_ActivityData(2)","type compatibility obligation:inv_ActivityData(3)","type compatibility obligation:inv_ActivityData(4)","type compatibility obligation:inv_ActivityData(5)","type compatibility obligation:inv_ActivityData(6)","type compatibility obligation:inv_ActivityData(7)","type invariant satisfiable obligation:(exists a:ActivityData \u0026 (a \u003c\u003d 7))","type invariant satisfiable obligation:(exists ppm:PPM \u0026 ((ppm \u003e\u003d 30) and (ppm \u003c\u003d 175)))","operation call obligation:(\u003cATRIA\u003e in set (dom leads))","operation call obligation:(forall leads1:map (Chamber) to (Lead), sensed2:map (Chamber) to (Sense), mode3:Mode, FixedAV4:Time, lastPulse5:Time, ARP6:Time, interval7:Time \u0026 (true \u003d\u003e (\u003cATRIA\u003e in set (dom leads1))))","operation call obligation:(forall leads1:map (Chamber) to (Lead), sensed2:map (Chamber) to (Sense), mode3:Mode, FixedAV4:Time, lastPulse5:Time, ARP6:Time, interval7:Time \u0026 (true \u003d\u003e (forall leads8:map (Chamber) to (Lead), sensed9:map (Chamber) to (Sense), mode10:Mode, FixedAV11:Time, lastPulse12:Time, ARP13:Time, interval14:Time \u0026 (true \u003d\u003e ({\u003cATRIA\u003e, \u003cVENTRICLE\u003e} subset (dom leads8))))))","legal map application obligation:((\u003cATRIA\u003e in set (dom leads)) \u003d\u003e ((\u003cATRIA\u003e in set (dom sensed)) \u003d\u003e (\u003cATRIA\u003e in set (dom sensed))))","legal map application obligation:(forall key in set (dom leads) \u0026 (key in set (dom leads)))","type invariant satisfiable obligation:(exists inp:InputTP \u0026 (forall line in set (elems (inp.#2)) \u0026 ((inp.#1) \u003e\u003d (line.#4))))","legal function application obligation:(forall fname:seq of (char) \u0026 pre_(((io.freadval))[InputTP]fname))","while loop termination obligation:...","while loop termination obligation:...","non-empty sequence obligation:(inplines \u003c\u003e [])","non-empty sequence obligation:(inplines \u003c\u003e [])","legal function application obligation:pre_(((io.writeval))[seq of (Outline)]outlines)","operation call obligation:(forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))"]