["type invariant satisfiable obligation:(exists a:ActivityData \u0026 (a \u003c\u003d 7))","type invariant satisfiable obligation:(exists ppm:PPM \u0026 ((ppm \u003e\u003d 30) and (ppm \u003c\u003d 175)))","type compatibility obligation:inv_PPM(60)","type compatibility obligation:inv_PPM(120)","non-zero obligation:(((60 / 60) / 10000) \u003c\u003e 0)","type compatibility obligation:is_((1 / ((LRL / 60) / 10000)), nat)","state invariant holds obligation:((MED \u003c 8) and ((10 in set {10, ... ,50}) and ((2 in set {2, ... ,16}) and (8 \u003c\u003d 16))))","state invariant holds obligation:(forall rateplan1:map (Time) to (Time), sensed2:[ActivityData], interval3:Time, finished4:bool, LRL5:PPM, MSR6:PPM, threshold7:nat1, reactionT8:Time, recoveryT9:Time, responseF10:nat1 \u0026 (((threshold7 \u003c 8) and ((reactionT8 in set {10, ... ,50}) and ((recoveryT9 in set {2, ... ,16}) and (responseF10 \u003c\u003d 16)))) \u003d\u003e (forall rateplan11:map (Time) to (Time), sensed12:[ActivityData], interval13:Time, finished14:bool, LRL15:PPM, MSR16:PPM, threshold17:nat1, reactionT18:Time, recoveryT19:Time, responseF20:nat1 \u0026 (((threshold17 \u003c 8) and ((reactionT18 in set {10, ... ,50}) and ((recoveryT19 in set {2, ... ,16}) and (responseF20 \u003c\u003d 16)))) \u003d\u003e (((threshold17 \u003c 8) and ((reactionT18 in set {10, ... ,50}) and ((recoveryT19 in set {2, ... ,16}) and (responseF20 \u003c\u003d 16)))) \u003d\u003e ((threshold17 \u003c 8) and ((reactionT18 in set {10, ... ,50}) and ((recoveryT19 in set {2, ... ,16}) and (responseF20 \u003c\u003d 16)))))))))","state invariant holds obligation:(forall ad:ActivityData \u0026 (((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16))))))","type compatibility obligation:(forall ad:ActivityData \u0026 is_(ad, [ActivityData]))","state invariant holds obligation:(((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))))","non-zero obligation:(((MSR / 60) / 10000) \u003c\u003e 0)","type compatibility obligation:is_((1 / ((MSR / 60) / 10000)), nat)","state invariant holds obligation:(((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))))","non-zero obligation:(((LRL / 60) / 10000) \u003c\u003e 0)","type compatibility obligation:is_((1 / ((LRL / 60) / 10000)), nat)","state invariant holds obligation:(((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))) \u003d\u003e ((threshold \u003c 8) and ((reactionT in set {10, ... ,50}) and ((recoveryT in set {2, ... ,16}) and (responseF \u003c\u003d 16)))))","type compatibility obligation:inv_ActivityData(4)","legal map application obligation:((\u003cATRIA\u003e in set (dom sensed)) \u003d\u003e (\u003cATRIA\u003e in set (dom sensed)))","type invariant satisfiable obligation:(exists inp:InputTP \u0026 (forall line in set (elems (inp.#2)) \u0026 ((inp.#1) \u003e\u003d (line.#4))))","legal function application obligation:(forall fname:seq1 of (char) \u0026 pre_(((io.freadval))[InputTP]fname))","while loop termination obligation:...","non-empty sequence obligation:(inplines \u003c\u003e [])","legal function application obligation:pre_(((io.writeval))[seq of (Outline)]convert(outlines))","legal sequence application obligation:(forall s:seq of (Outline) \u0026 (forall i in set (inds s) \u0026 (i in set (inds s))))","legal sequence application obligation:(forall s:seq of (Outline) \u0026 (forall i in set (inds s) \u0026 (i in set (inds s))))","legal sequence application obligation:(forall s:seq of (Outline) \u0026 (forall i in set (inds s) \u0026 (i in set (inds s))))","type compatibility obligation:(forall s:seq of (Outline) \u0026 is_([mk_((s(i).#1), (s(i).#2), (floor ((s(i).#3) / 10))) | i in set (inds s)], seq of (Outline)))","operation call obligation:(forall text:seq of (char) \u0026 ((\"\" \u003d \"\") \u003c\u003d\u003e (\"\" \u003d nil)))"]