import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Number fst(final Rec r) {
        if (r.b) {
            return 1111L;
        } else {
            return r.a;
        }
    }

    public static Object Run() {
        Rec r1 = new Rec(5L, true);
        Rec recModifierExp_1 = Utils.copy(r1);

        recModifierExp_1.a = 11L;
        recModifierExp_1.b = false;

        return fst(Utils.copy(recModifierExp_1));
    }

    public String toString() {
        return "Entry{}";
    }

    public static class Rec implements Record {
        public Number a;
        public Boolean b;

        public Rec(final Number _a, final Boolean _b) {
            a = _a;
            b = _b;
        }

        public boolean equals(final Object obj) {
            if (!(obj instanceof Rec)) {
                return false;
            }

            Rec other = ((Rec) obj);

            return (Utils.equals(a, other.a)) && (Utils.equals(b, other.b));
        }

        public int hashCode() {
            return Utils.hashCode(a, b);
        }

        public Rec copy() {
            return new Rec(a, b);
        }

        public String toString() {
            return "mk_Entry`Rec" + Utils.formatFields(a, b);
        }
    }
}

##########
