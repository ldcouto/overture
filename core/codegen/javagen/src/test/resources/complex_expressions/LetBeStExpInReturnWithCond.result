import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Number Run() {
        Number letBeStExp_1 = null;
        Number x = null;
        Number y = null;
        Number z = null;
        Boolean success_1 = false;
        VDMSet set_1 = SetUtil.set(2L, 4L, 6L);

        for (Iterator iterator_1 = set_1.iterator();
                iterator_1.hasNext() && !(success_1);) {
            x = ((Number) iterator_1.next());
            success_1 = false;

            for (Iterator iterator_2 = set_1.iterator();
                    iterator_2.hasNext() && !(success_1);) {
                y = ((Number) iterator_2.next());
                success_1 = false;

                for (Iterator iterator_3 = set_1.iterator();
                        iterator_3.hasNext() && !(success_1);) {
                    z = ((Number) iterator_3.next());

                    Boolean andResult_1 = false;

                    if (x.longValue() < y.longValue()) {
                        if (y.longValue() < z.longValue()) {
                            andResult_1 = true;
                        }
                    }

                    success_1 = andResult_1;
                }
            }
        }

        if (!(success_1)) {
            throw new RuntimeException("Let Be St found no applicable bindings");
        }

        letBeStExp_1 = x.longValue() * y.longValue() * z.longValue();

        return letBeStExp_1;
    }

    public String toString() {
        return "Entry{}";
    }
}

##########
