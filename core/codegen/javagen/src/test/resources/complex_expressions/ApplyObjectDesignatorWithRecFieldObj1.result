import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Object Run() {
        A a = new A(SeqUtil.seq(new Entry()));

        return op(Utils.copy(a));
    }

    public static Number op(final A a) {
        return ((Entry) Utils.get(a.es, 1L)).getConst();
    }

    public Number getConst() {
        return 5L;
    }

    public String toString() {
        return "Entry{}";
    }

    public static class A implements Record {
        public VDMSeq es;

        public A(final VDMSeq _es) {
            es = (_es != null) ? Utils.copy(_es) : null;
        }

        public boolean equals(final Object obj) {
            if (!(obj instanceof A)) {
                return false;
            }

            A other = ((A) obj);

            return Utils.equals(es, other.es);
        }

        public int hashCode() {
            return Utils.hashCode(es);
        }

        public A copy() {
            return new A(es);
        }

        public String toString() {
            return "mk_Entry`A" + Utils.formatFields(es);
        }
    }
}

##########
