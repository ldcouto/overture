import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Object Run() {
        return Test();
    }

    public static Boolean pick() {
        return true;
    }

    public static VDMSeq Op() {
        VDMSeq seqCompResult_1 = SeqUtil.seq();
        VDMSet set_1 = SeqUtil.elems(SeqUtil.seq(1L, 2L, 3L));

        for (Iterator iterator_1 = set_1.iterator(); iterator_1.hasNext();) {
            Number x = ((Number) iterator_1.next());

            if (pick()) {
                seqCompResult_1 = SeqUtil.conc(Utils.copy(seqCompResult_1),
                        SeqUtil.seq(x.longValue() * 2L));
            }
        }

        return Utils.copy(seqCompResult_1);
    }

    public static Number Test() {
        Number sum = 0L;

        for (Iterator iterator_2 = Op().iterator(); iterator_2.hasNext();) {
            Number e = (Number) iterator_2.next();
            sum = sum.longValue() + e.longValue();
        }

        return sum;
    }

    public String toString() {
        return "Entry{}";
    }
}

##########
