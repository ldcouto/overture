import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Object Run() {
        Rec r = new Rec(5L, true);
        Rec recModifierExp_1 = Utils.copy(r);

        recModifierExp_1.x = 6L;
        recModifierExp_1.b = false;
        r = Utils.copy(recModifierExp_1);

        return Tuple.mk_(r.x, r.b);
    }

    public String toString() {
        return "Entry{}";
    }

    public static class Rec implements Record {
        public Number x;
        public Boolean b;

        public Rec(final Number _x, final Boolean _b) {
            x = _x;
            b = _b;
        }

        public boolean equals(final Object obj) {
            if (!(obj instanceof Rec)) {
                return false;
            }

            Rec other = ((Rec) obj);

            return (Utils.equals(x, other.x)) && (Utils.equals(b, other.b));
        }

        public int hashCode() {
            return Utils.hashCode(x, b);
        }

        public Rec copy() {
            return new Rec(x, b);
        }

        public String toString() {
            return "mk_Entry`Rec" + Utils.formatFields(x, b);
        }
    }
}

##########
