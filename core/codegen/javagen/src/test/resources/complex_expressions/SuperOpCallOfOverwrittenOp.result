import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class A {
    public A() {
    }

    public Number op() {
        return 1L;
    }

    public String toString() {
        return "A{}";
    }
}

##########
import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class B extends A {
    public B() {
    }

    public Number op() {
        return super.op().longValue() + super.op().longValue();
    }

    public String toString() {
        return "B{}";
    }
}

##########
import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Object Run() {
        B b = new B();

        return b.op();
    }

    public String toString() {
        return "Entry{}";
    }
}

##########
