import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class A {
    public A() {
    }

    public Number realPatternOp(final Number realPattern_1) {
        Boolean success_1 = Utils.equals(realPattern_1, 2.1);

        if (!(success_1)) {
            throw new RuntimeException("Real pattern match failed");
        }

        Number realPattern_2 = 2.1;
        Boolean success_2 = Utils.equals(realPattern_2, 2.1);

        if (!(success_2)) {
            throw new RuntimeException("Real pattern match failed");
        }

        return 2.1;
    }

    public static Number realPatternFun(final Number realPattern_3) {
        Boolean success_3 = Utils.equals(realPattern_3, 2.1);

        if (!(success_3)) {
            throw new RuntimeException("Real pattern match failed");
        }

        Number realPattern_4 = 2.1;
        Boolean success_4 = Utils.equals(realPattern_4, 2.1);

        if (!(success_4)) {
            throw new RuntimeException("Real pattern match failed");
        }

        return 2.1;
    }

    public String toString() {
        return "A{}";
    }
}

##########
import org.overture.codegen.runtime.*;

import java.util.*;


@SuppressWarnings("all")
public class Entry {
    public Entry() {
    }

    public static Object Run() {
        return SeqUtil.seq(new A().realPatternOp(2.1), A.realPatternFun(2.1));
    }

    public String toString() {
        return "Entry{}";
    }
}

##########
