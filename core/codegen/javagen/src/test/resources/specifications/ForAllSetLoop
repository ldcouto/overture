class A

types

Rec :: x : int;

operations 

public op : () ==> ()
op () == 
let x = {mk_Rec(1),mk_Rec(2),mk_Rec(3)}
in
	for all e in set x do
	( 
		skip;
	);

public op1 : () ==> ()
op1 () == 
	for all n in set {1,2,3} do skip;
	
public op2 : () ==> ()
op2 () == for all e in set {} do skip;

public op3 : () ==> ()
op3 () == 
	for all n in set f() do skip;

functions

public f :  () -> set of nat
f () == {1,2,3};

end A